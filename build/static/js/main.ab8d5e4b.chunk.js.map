{"version":3,"sources":["types/currentTypes.js","types/productsTypes.js","config/index.js","helpers/index.js","actions/products.js","actions/current.js","components/Autocomplete.js","components/ProductInput.js","components/CategoryInput.js","components/PriceInput.js","components/FilterData.js","App.js","serviceWorker.js","reducers/products.js","reducers/current.js","reducers/index.js","index.js"],"names":["SAVE","SAVE_SUCCESS","SAVE_ERROR","SET_NAME","SET_PRODUCT","SET_CATEGORY","SET_QUANTITY","SET_UNITY","SET_PRICE","SET_DATES","SET_CATEGORIES","GET_PRODUCTS","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_ERROR","api","LS","fetch","concat","then","response","catch","error","miliToSt","mili","dt","Date","m","getMonth","toString","length","d","getDate","y","getFullYear","valToDate","value","lim","date","spvalue","split","percent","val","total","Math","floor","catsFromProds","products","reduce","cats","product","cat","name","category","spent","find","cate","filtered","filter","prod","sum","price","subitems","push","ini","monthAgo","setMonth","end","getProducts","dispatch","type","data","JSON","parse","localStorage","getItem","Promise","r","x","ApiEndpoint","ok","Error","statusText","json","responseJson","getProductsFromAPI","payload","setCategories","getState","listAll","_getState$products$da","dates","categories","setDates","setProduct","setCategory","setQuantity","quantity","trim","setUnity","unity","setPrice","replace","isNaN","save","Object","objectSpread","setItem","stringify","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","saveAPI","current","Autocomplete","this","props","focus","_input","_this","_this$props","items","placeholder","matched","item","filteredItems","sort","a","b","uniques","el","includes","react_default","createElement","className","ref","i","onChange","e","target","map","key","onClick","Component","ProductInput","components_Autocomplete","connect","state","currentActions","CategoryInput","PriceInput","FilterData","catSum","s","_this$props$dates","sets","ev","siSum","productsActions","App","document","title","components_ProductInput","components_CategoryInput","components_PriceInput","components_FilterData","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","INITIAL_STATE","loading","combineReducers","arguments","undefined","_ref","allStoreEnhancers","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","render","es","src_App_0","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ab8d5e4b.chunk.js","sourcesContent":["export const SAVE = 'current:save'\r\nexport const SAVE_SUCCESS = 'current:saveSuccess'\r\nexport const SAVE_ERROR = 'current:saveError'\r\nexport const SET_NAME = 'current:setName'\r\nexport const SET_PRODUCT = 'current:setProduct'\r\nexport const SET_CATEGORY = 'current:setCategory'\r\nexport const SET_QUANTITY = 'current:setQuantity'\r\nexport const SET_UNITY = 'current:setUnity'\r\nexport const SET_PRICE = 'current:setPrice'","export const SET_DATES = 'products:setDates'\r\nexport const SET_CATEGORIES = 'products:setCategories'\r\nexport const GET_PRODUCTS = 'products:getProducts'\r\nexport const GET_PRODUCTS_SUCCESS = 'products:getProductsSuccess'\r\nexport const GET_PRODUCTS_ERROR = 'products:getProductsError'\r\n","export const api = 'http://localhost:8080'\r\nexport const LS = fetch( `${ api }/getProducts/` ).then( response => false ).catch( error => true )","export const miliToSt = mili => {\r\n  let dt = new Date(mili)\r\n  let m = (dt.getMonth()+1).toString()\r\n  m = (m.length === 1 ? '0' : '') + m\r\n  let d = dt.getDate().toString()\r\n  d = (d.length === 1 ? '0' : '') + d\r\n  const y = dt.getFullYear()\r\n\r\n  return `${ y }-${ m }-${ d }`\r\n}\r\n\r\nexport const valToDate = ( value, lim ) => {\r\n  const date = {}\r\n  let spvalue = value.split('-')\r\n\r\n  if( lim === 'end' )\r\n   spvalue = spvalue.concat(['23:59:59'])\r\n  \r\n  date[ lim ] = new Date( spvalue ) * 1\r\n\r\n  return date\r\n}\r\n\r\nexport const percent = ( val, total ) => Math.floor( 100 * val / total )\r\n\r\nexport const catsFromProds = products => {\r\n  const categories = products\r\n    .reduce( ( cats, product ) => {\r\n      const cat = { name: product.category, spent: 0 }\r\n      if( !cats.find( cate => cate.name === cat.name ) ){\r\n        const filtered = products.filter( prod => prod.category === cat.name )\r\n        cat.spent = filtered.reduce(( sum, prod ) => sum + prod.price ,0)\r\n        cat.subitems = filtered\r\n        cat.date = cat.subitems[0].date\r\n        cats.push( cat )\r\n      }\r\n      return cats\r\n    },[] )\r\n\r\n    return categories\r\n}\r\n\r\nexport const ini = ( () => {\r\n  const monthAgo = new Date()\r\n  monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n  return monthAgo * 1\r\n} )()\r\n\r\nexport const end = ( () => valToDate( miliToSt(new Date() * 1), 'end' ).end )()\r\n","import {\r\n  GET_PRODUCTS,\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_ERROR,\r\n  SET_CATEGORIES,\r\n  SET_DATES\r\n} from '../types'\r\nimport { api, LS } from '../config'\r\nimport { catsFromProds } from '../helpers'\r\n\r\nexport function getProducts() {\r\n  return dispatch => {\r\n    dispatch({ type: GET_PRODUCTS })\r\n    const getProductsPromise = getProductsFromAPI()\r\n    getProductsPromise.then( response => {\r\n      if ( !response.error ) {\r\n        dispatch( getProductsSuccess( response.data ) )\r\n        dispatch( setCategories() )\r\n      } else {\r\n        dispatch( getProductsError( response.error ) )\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function setCategories (){\r\n  return (dispatch, getState) =>{\r\n    let products = getState().products.listAll\r\n    let { ini, end } = getState().products.dates\r\n\r\n    products = ini && end ? products.filter( prod => prod.date >= ini && prod.date <= end ) : products\r\n\r\n    const categories = catsFromProds( products )\r\n\r\n    dispatch({\r\n      type: SET_CATEGORIES,\r\n      payload: {\r\n        categories\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function setDates( dates ){\r\n  return {\r\n    type: SET_DATES,\r\n    payload: {\r\n      dates\r\n    }\r\n  }\r\n}\r\n\r\nfunction getProductsSuccess( products ) {\r\n  return {\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    payload: {\r\n      products\r\n    }\r\n  }\r\n}\r\n\r\nfunction getProductsError( error ) {\r\n  return {\r\n    type: GET_PRODUCTS_ERROR,\r\n    payload: {\r\n      error: error\r\n    }\r\n  }\r\n}\r\n\r\nfunction getProductsFromAPI () {\r\n  if( LS ){\r\n    const data = JSON.parse( localStorage.getItem('products') || \"[]\" )\r\n    return new Promise( (r,x) => r({ data }) )\r\n  }else{\r\n    const ApiEndpoint = `${ api }/getProducts/`\r\n\r\n    return fetch( ApiEndpoint )\r\n    .then( response => {\r\n      if( !response.ok )\r\n        throw Error( response.statusText )\r\n      return response.json()\r\n    })\r\n    .then( responseJson => {\r\n      return { data: responseJson }\r\n    }).catch( error => {\r\n      return { error }\r\n    })\r\n  }\r\n}\r\n\r\n","import {\r\n  SAVE,\r\n  SAVE_SUCCESS,\r\n  SAVE_ERROR,\r\n  SET_PRODUCT,\r\n  SET_NAME,\r\n  SET_CATEGORY,\r\n  SET_QUANTITY,\r\n  SET_UNITY,\r\n  SET_PRICE\r\n} from '../types'\r\nimport { api, LS } from '../config'\r\nimport { getProducts } from './products'\r\n\r\nexport function setProduct( name ) {\r\n  return ( dispatch, getState ) => {\r\n    let product = getState().products.listAll.find( prod => prod.name === name )\r\n\r\n    if( !product ){\r\n      dispatch({\r\n        type: SET_NAME,\r\n        payload: {\r\n          name\r\n        } \r\n      })\r\n    }else{\r\n      dispatch({\r\n        type: SET_PRODUCT,\r\n        payload: {\r\n          product\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function setCategory( category ) {\r\n  return ( dispatch ) => {\r\n    dispatch({\r\n      type: SET_CATEGORY,\r\n      payload: {\r\n        category\r\n      } \r\n    })\r\n  }\r\n}\r\n\r\nexport function setQuantity( quantity ) {\r\n  return ( dispatch ) => {\r\n    dispatch({\r\n      type: SET_QUANTITY,\r\n      payload: {\r\n        quantity: quantity.trim()\r\n      } \r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport function setUnity( unity ) {\r\n  return ( dispatch ) => {\r\n    dispatch({\r\n      type: SET_UNITY,\r\n      payload: {\r\n        unity\r\n      } \r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport function setPrice( price ) {\r\n  price = price.trim().replace(',','.') * 1\r\n  price = isNaN( price ) ? 0 : price\r\n\r\n  return ( dispatch ) => {\r\n    dispatch({\r\n      type: SET_PRICE,\r\n      payload: {\r\n        price\r\n      } \r\n    })\r\n  }\r\n}\r\n\r\nexport function save() {\r\n  return ( dispatch, getState ) => {\r\n    dispatch({ type: SAVE })\r\n    const savePromise = saveAPI( getState().current )\r\n    savePromise.then( response => {\r\n      if ( !response.error ) {\r\n        dispatch( saveSuccess() )\r\n        dispatch( getProducts() )\r\n      } else {\r\n        dispatch( saveError( response.error ) )\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction saveSuccess() {\r\n  return { type: SAVE_SUCCESS }\r\n}\r\n\r\nfunction saveError( error ) {\r\n  return { type: SAVE_ERROR }\r\n}\r\n\r\nfunction saveAPI ( product ) {\r\n  product = { ...product, date: new Date() * 1 }\r\n  if( LS ){\r\n    const data = JSON.parse( localStorage.getItem('products') || \"[]\" )\r\n    data.push( product )\r\n    localStorage.setItem('products', JSON.stringify( data ))\r\n    return new Promise( (r,x) => r({ data }) )\r\n  }else{\r\n    const ApiEndpoint = `${ api }/save`\r\n\r\n    return fetch( ApiEndpoint,{\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n          'Content-Type': 'application/json'          \r\n      },\r\n      redirect: 'follow',\r\n      referrer: 'no-referrer',\r\n      body: JSON.stringify({ product })\r\n    } )\r\n    .then( response => {\r\n      if( !response.ok )\r\n        throw Error( response.statusText )\r\n      return response.json()\r\n    })\r\n    .then( responseJson => {\r\n      return { data: responseJson }\r\n    }).catch( error => {\r\n      return { error }\r\n    })\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Autocomplete extends Component {\r\n  componentDidMount(){\r\n    if( this.props.focus ){\r\n      this._input.focus()\r\n    }\r\n  }\r\n  componentDidUpdate(){\r\n    if( this.props.focus ){\r\n      this._input.focus()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { items, current, placeholder, setItem } = this.props\r\n    const matched = items.find( item => item.name === current )\r\n    let filteredItems = !current || matched ? [] : (\r\n        items.sort( (a,b) => a-b ).reduce( (uniques, item) => {\r\n          if( !uniques.find( el => el.name === item.name  ) )\r\n            uniques.push( item )\r\n          return uniques\r\n        },[] ).filter( item => item.name.includes( current ) ) )\r\n\r\n    return (\r\n      <div className=\"search\">\r\n        <input ref={i => (this._input = i)} type=\"text\" value={ current } placeholder={ placeholder } onChange={ e => { setItem(e.target.value) } } />\r\n        <ul>\r\n          { filteredItems.map( item => (\r\n            <li key={ item.date }><button onClick={ () => setItem(item.name) } >{ item.name }</button></li> ) ) }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Autocomplete","import React, { Component } from 'react'\r\nimport Autocomplete from './Autocomplete'\r\nimport { connect } from 'react-redux'\r\nimport { currentActions } from '../actions'\r\n\r\nclass ProductInput extends Component {\r\n  render() {\r\n    const { products, current, setProduct, error } = this.props\r\n\r\n    return (\r\n      <div className=\"product-input\">\r\n        <label>\r\n          <Autocomplete \r\n            items = { products }\r\n            placeholder = \"Enter product\"\r\n            current = { current }\r\n            focus = { true }\r\n            setItem = { setProduct } \r\n          />\r\n        </label>\r\n        <p>{ error }</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.listAll,\r\n  current: state.current.name\r\n})\r\n\r\nconst mapActionsToProps = dispatch => ({\r\n  setProduct: name => dispatch( currentActions.setProduct( name ) )\r\n})\r\n\r\nexport default connect( mapStateToProps, mapActionsToProps )( ProductInput )\r\n","import React, { Component } from 'react'\r\nimport Autocomplete from './Autocomplete'\r\nimport { connect } from 'react-redux'\r\nimport { currentActions } from '../actions'\r\n\r\nclass CategoryInput extends Component {\r\n\r\n  render() {\r\n    const { categories, current, setCategory, error } = this.props\r\n\r\n    return (\r\n      <div className=\"category-input\">\r\n        <label>\r\n          <Autocomplete \r\n            items = { categories } \r\n            placeholder = \"Enter category\" \r\n            current = { current } \r\n            setItem = { setCategory }\r\n          />\r\n        </label>\r\n        <p>{ error }</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  categories: state.products.categories,\r\n  current: state.current.category\r\n})\r\n\r\nconst mapActionsToProps = dispatch => ({\r\n  setCategory: category => dispatch( currentActions.setCategory( category ) )\r\n})\r\n\r\nexport default connect( mapStateToProps, mapActionsToProps )( CategoryInput )\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { currentActions } from '../actions'\r\n\r\nclass PriceInput extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"price-input\">\r\n        <label>\r\n          <input value={ this.props.current } placeholder=\"Enter price. Ej.: 200\" onChange={ e => this.props.setPrice( e.target.value ) } />\r\n        </label>\r\n        <p>{ this.props.error }</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.current.price\r\n})\r\n\r\nconst mapActionsToProps = dispatch => ({\r\n  setPrice: price => dispatch( currentActions.setPrice( price ) )\r\n})\r\n\r\nexport default connect( mapStateToProps, mapActionsToProps )( PriceInput )\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { productsActions } from '../actions'\r\nimport { miliToSt, valToDate, percent } from '../helpers'\r\n\r\nclass FilterData extends Component {\r\n  render() {\r\n    const catSum = this.props.categories.reduce( (s,i) => s+i.spent, 0 )\r\n    let { ini, end } = this.props.dates\r\n    \r\n    ini = miliToSt( ini )\r\n    end = miliToSt( end )\r\n\r\n    const sets = ( value, lim ) => {\r\n      const date = valToDate( value, lim )\r\n\r\n      this.props.setDates( date )\r\n      this.props.setCategories()\r\n    }\r\n\r\n    return (\r\n      <section className=\"graphdata-input\">\r\n        <h2>$ { this.props.categories.reduce( (s,i)=>s+i.spent ,0) }</h2>\r\n        <label>\r\n          <input type=\"date\" value={ ini } onChange={ ev => sets( ev.target.value, 'ini' ) } />\r\n        </label>\r\n        <label>\r\n          <input type=\"date\" value={ end } onChange={ ev => sets( ev.target.value, 'end' ) } />\r\n        </label>\r\n        <p>{ this.props.error }</p>\r\n\r\n        <div className=\"catlist\">\r\n        { this.props.categories.sort( (a,b) => b.spent-a.spent ).map( cat => {\r\n          const siSum = cat.subitems.reduce( (s,i)=>s+i.price ,0 )\r\n          return (\r\n            <div key={ cat.name }>\r\n              <p>\r\n                <span className=\"catname\">{ cat.name }: </span> \r\n                <span className=\"perc\">{ percent( cat.spent, catSum ) } %</span>\r\n                <span className=\"price\">$ { cat.spent }</span>\r\n              </p>\r\n              <ul>\r\n                { cat.subitems.map( product => (\r\n                  <li key={ product.date }>\r\n                    <span>{ product.name }</span>\r\n                    <span className=\"perc\">{ percent( product.price, siSum ) } %</span>\r\n                    <span className=\"price\">&nbsp;$ { product.price }</span>\r\n                    <span className=\"pdate\">| { miliToSt( product.date ) } |</span>\r\n                  </li> ) ) }\r\n              </ul>\r\n            </div> )} )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dates: state.products.dates,\r\n  categories: state.products.categories,\r\n  products: state.products.listAll\r\n})\r\n\r\nconst mapActionsToProps = dispatch => ({\r\n  setCategories: () => dispatch( productsActions.setCategories() ),\r\n  setDates: dates => dispatch( productsActions.setDates( dates ) ),\r\n})\r\n\r\n\r\nexport default connect( mapStateToProps, mapActionsToProps )( FilterData )\r\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { productsActions, currentActions } from './actions'\nimport './App.css'\n\nimport ProductInput from './components/ProductInput'\nimport CategoryInput from './components/CategoryInput'\nimport PriceInput from './components/PriceInput'\nimport FilterData from './components/FilterData'\n//import QuantityInput from './components/QuantityInput'\n//import UnityInput from './components/UnityInput'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getProducts()\n    document.title = 'Control money spending'\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>CtrlCom</h1>\n        <section>\n          <ProductInput />\n          <CategoryInput />\n          <PriceInput />\n          <button onClick={ this.props.save } >Done</button>\n        </section>\n        <FilterData />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => state\nconst mapActionsToProps = dispatch => ({\n  getProducts: () => dispatch( productsActions.getProducts() ),\n  save: () => dispatch( currentActions.save() )\n})\n\nexport default connect( mapStateToProps, mapActionsToProps )( App )\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  GET_PRODUCTS,\r\n  GET_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_ERROR,\r\n  SET_CATEGORIES,\r\n  SET_DATES\r\n} from '../types'\r\nimport { ini, end } from '../helpers'\r\n\r\nconst INITIAL_STATE = {\r\n  dates: {\r\n    ini,\r\n    end\r\n  },\r\n  categories: [],\r\n  listAll: [],\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\nexport default function productsReducer (state = INITIAL_STATE, { type, payload }) {\r\n  switch(type) {\r\n\r\n    case GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      }\r\n\r\n    case GET_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listAll: payload.products,\r\n        loading: false,\r\n        error: null\r\n      }\r\n\r\n    case GET_PRODUCTS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload.error\r\n      }\r\n\r\n    case SET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: payload.categories\r\n      }\r\n\r\n    case SET_DATES:\r\n      return {\r\n        ...state,\r\n        dates: {\r\n          ...state.dates,\r\n          ...payload.dates\r\n        }\r\n      }\r\n\r\n    default: return state\r\n  }\r\n}\r\n","import {\r\n  SAVE,\r\n  SAVE_SUCCESS,\r\n  SAVE_ERROR,\r\n  SET_NAME,\r\n  SET_PRODUCT,\r\n  SET_CATEGORY,\r\n  SET_QUANTITY,\r\n  SET_UNITY,\r\n  SET_PRICE\r\n} from '../types'\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  category: \"\",\r\n  quantity: \"\",\r\n  unity: \"\",\r\n  price: \"\",\r\n  date: new Date()*1\r\n}\r\n\r\nexport default function currentReducer (state = INITIAL_STATE, { type, payload }) {\r\n  switch(type) {\r\n\r\n    case SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...payload.product\r\n      }\r\n\r\n    case SET_NAME:\r\n      return {\r\n        ...state,\r\n        name: payload.name\r\n      }\r\n\r\n    case SET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: payload.category\r\n      }\r\n\r\n    case SET_QUANTITY:\r\n      return {\r\n        ...state,\r\n        quantity: payload.quantity\r\n      }\r\n\r\n    case SET_UNITY:\r\n      return {\r\n        ...state,\r\n        unity: payload.unity\r\n      }\r\n\r\n    case SET_PRICE:\r\n      return {\r\n        ...state,\r\n        price: payload.price\r\n      }\r\n\r\n    case SAVE:\r\n      return {\r\n        ...state\r\n      }\r\n\r\n    case SAVE_SUCCESS:\r\n      return {\r\n        ...INITIAL_STATE,\r\n        date: new Date()*1\r\n      }\r\n\r\n    case SAVE_ERROR:\r\n      return {\r\n        ...state\r\n      }\r\n\r\n    default: return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport products from './products'\r\nimport current from './current'\r\n\r\nexport default combineReducers({\r\n  products,\r\n  current\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\n\nconst allStoreEnhancers = compose(\n  applyMiddleware(thunk),\n  //window.devToolsExtension && window.devToolsExtension()\n)\n\nconst store = createStore(reducers, allStoreEnhancers)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}